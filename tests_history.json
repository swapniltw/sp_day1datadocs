[{"table_name": "db_dbt_demo_101.l2_silver.stg_orders", "column_name": "STATUS", "test_name": "accepted_values_stg_orders_STATUS__Pending", "run_at": "2024-05-09T15:43:59", "status": "Fail", "execution_time": 0.9076220989227295, "message": "Got 1 result, configured to fail if != 0", "failures_count": 1.0, "failures_json": "", "failures_table": null, "severity": "ERROR", "compiled_sql": "\n    \n    \n\nwith all_values as (\n\n    select\n        STATUS as value_field,\n        count(*) as n_records\n\n    from DB_DBT_DEMO_101.L2_SILVER.stg_orders\n    group by STATUS\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'Pending'\n)\n\n\n"}, {"table_name": null, "column_name": null, "test_name": "test_stg_orders", "run_at": "2024-05-09T15:43:59", "status": "Error", "execution_time": 0.6217567920684814, "message": "Database Error in test test_stg_orders (tests/singular/test_stg_orders.sql)\n  000904 (42000): SQL compilation error: error line 12 at position 6\n  invalid identifier 'PRODUCTID'\n  compiled Code at target/run/sp_dbt_poc/tests/singular/test_stg_orders.sql", "failures_count": null, "failures_json": "", "failures_table": null, "severity": "ERROR", "compiled_sql": "-- stg_orders for a product_id=5(flagship product), customers can only order at max N items\n-- Therefore return records where this isn't true to make the test fail\n\n\nselect *\nfrom DB_DBT_DEMO_101.L2_SILVER.stg_orders \nwhere productid='101' and quantity > 1"}, {"table_name": "db_dbt_demo_101.l2_silver.stg_orders", "column_name": "STATUS", "test_name": "accepted_values_stg_orders_STATUS__Pending", "run_at": "2024-05-09T15:45:01", "status": "Fail", "execution_time": 0.6432838439941406, "message": "Got 1 result, configured to fail if != 0", "failures_count": 1.0, "failures_json": "", "failures_table": null, "severity": "ERROR", "compiled_sql": "\n    \n    \n\nwith all_values as (\n\n    select\n        STATUS as value_field,\n        count(*) as n_records\n\n    from DB_DBT_DEMO_101.L2_SILVER.stg_orders\n    group by STATUS\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'Pending'\n)\n\n\n"}, {"table_name": null, "column_name": null, "test_name": "test_stg_orders", "run_at": "2024-05-09T15:45:01", "status": "Fail", "execution_time": 0.7327170372009277, "message": "Got 2 results, configured to fail if != 0", "failures_count": 2.0, "failures_json": "", "failures_table": null, "severity": "ERROR", "compiled_sql": "-- stg_orders for a product_id=5(flagship product), customers can only order at max N items\n-- Therefore return records where this isn't true to make the test fail\n\n\nselect *\nfrom DB_DBT_DEMO_101.L2_SILVER.stg_orderitems \nwhere productid='101' and quantity > 1"}, {"table_name": "db_dbt_demo_101.l2_silver.stg_orders", "column_name": "STATUS", "test_name": "accepted_values_stg_orders_STATUS__Pending", "run_at": "2024-05-09T15:45:34", "status": "Fail", "execution_time": 0.6244971752166748, "message": "Got 1 result, configured to fail if != 0", "failures_count": 1.0, "failures_json": "", "failures_table": null, "severity": "ERROR", "compiled_sql": "\n    \n    \n\nwith all_values as (\n\n    select\n        STATUS as value_field,\n        count(*) as n_records\n\n    from DB_DBT_DEMO_101.L2_SILVER.stg_orders\n    group by STATUS\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'Pending'\n)\n\n\n"}, {"table_name": null, "column_name": null, "test_name": "test_stg_orders", "run_at": "2024-05-09T15:45:34", "status": "Pass", "execution_time": 0.6062047481536865, "message": null, "failures_count": 0.0, "failures_json": "", "failures_table": null, "severity": "ERROR", "compiled_sql": "-- stg_orders for a product_id=5(flagship product), customers can only order at max N items\n-- Therefore return records where this isn't true to make the test fail\n\n\nselect *\nfrom DB_DBT_DEMO_101.L2_SILVER.stg_orderitems \nwhere productid='101' and quantity > 5"}, {"table_name": "db_dbt_demo_101.l2_silver.stg_orders", "column_name": "STATUS", "test_name": "accepted_values_stg_orders_STATUS__Pending", "run_at": "2024-05-09T15:46:49", "status": "Fail", "execution_time": 1.747164011001587, "message": "Got 1 result, configured to fail if != 0", "failures_count": 1.0, "failures_json": "", "failures_table": null, "severity": "ERROR", "compiled_sql": "\n    \n    \n\nwith all_values as (\n\n    select\n        STATUS as value_field,\n        count(*) as n_records\n\n    from DB_DBT_DEMO_101.L2_SILVER.stg_orders\n    group by STATUS\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'Pending'\n)\n\n\n"}, {"table_name": null, "column_name": null, "test_name": "test_stg_orderitems_max_flagship_product_quantity_per_order", "run_at": "2024-05-09T15:46:49", "status": "Pass", "execution_time": 0.7838578224182129, "message": null, "failures_count": 0.0, "failures_json": "", "failures_table": null, "severity": "ERROR", "compiled_sql": "-- stg_orders for a product_id=5(flagship product), customers can only order at max 5 items\n-- Therefore return records where this isn't true to make the test fail\n\n\nselect *\nfrom DB_DBT_DEMO_101.L2_SILVER.stg_orderitems \nwhere productid='101' and quantity > 5"}, {"table_name": "db_dbt_demo_101.l2_silver.stg_orders", "column_name": "STATUS", "test_name": "accepted_values_stg_orders_STATUS__Pending__Completed", "run_at": "2024-05-09T15:47:16", "status": "Pass", "execution_time": 0.8936419486999512, "message": null, "failures_count": 0.0, "failures_json": "", "failures_table": null, "severity": "ERROR", "compiled_sql": "\n    \n    \n\nwith all_values as (\n\n    select\n        STATUS as value_field,\n        count(*) as n_records\n\n    from DB_DBT_DEMO_101.L2_SILVER.stg_orders\n    group by STATUS\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'Pending','Completed'\n)\n\n\n"}, {"table_name": null, "column_name": null, "test_name": "test_stg_orderitems_max_flagship_product_quantity_per_order", "run_at": "2024-05-09T15:47:16", "status": "Pass", "execution_time": 0.6540939807891846, "message": null, "failures_count": 0.0, "failures_json": "", "failures_table": null, "severity": "ERROR", "compiled_sql": "-- stg_orders for a product_id=5(flagship product), customers can only order at max 5 items\n-- Therefore return records where this isn't true to make the test fail\n\n\nselect *\nfrom DB_DBT_DEMO_101.L2_SILVER.stg_orderitems \nwhere productid='101' and quantity > 5"}]