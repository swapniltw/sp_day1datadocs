{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v5.json", "dbt_version": "1.7.13", "generated_at": "2024-05-15T17:10:05.846135Z", "invocation_id": "58d918ed-8da3-404b-8b0c-b08c9761817c", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-15T17:10:01.139203Z", "completed_at": "2024-05-15T17:10:01.164442Z"}, {"name": "execute", "started_at": "2024-05-15T17:10:01.166044Z", "completed_at": "2024-05-15T17:10:01.166058Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.029590368270874023, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.re_data.re_data_last_table_samples_part", "compiled": true, "compiled_code": "\n\n\n    \n    \n    with types_table as (\n        select\n            cast (null as \n    \n    STRING\n\n) as string_type,\n            cast (null as \n    \n    \n    \n    STRING\n\n\n\n) as long_string_type,\n            cast (1 as \n    \n    FLOAT\n\n) as numeric_type,\n            cast ('2000-01-10' as \n    \n    TIMESTAMP_NTZ\n\n) as timestamp_type,\n            cast (true as \n    \n    BOOLEAN\n\n) as boolean_type\n    )\n\n    select\n    \n         string_type as table_name,\n    \n         string_type as sample_data\n    \n    from types_table\n    where string_type is not null\n\n", "relation_name": "DB_DBT_DEMO_101.L3_GOLD.re_data_last_table_samples_part"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-15T17:10:01.170535Z", "completed_at": "2024-05-15T17:10:01.178856Z"}, {"name": "execute", "started_at": "2024-05-15T17:10:01.180354Z", "completed_at": "2024-05-15T17:10:01.180362Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01250767707824707, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.re_data.re_data_monitored", "compiled": true, "compiled_code": "\n\n\n    \n    with types_table as (\n        select\n            cast (null as \n    \n    STRING\n\n) as string_type,\n            cast (null as \n    \n    \n    \n    STRING\n\n\n\n) as long_string_type,\n            cast (1 as \n    \n    FLOAT\n\n) as numeric_type,\n            cast ('2000-01-10' as \n    \n    TIMESTAMP_NTZ\n\n) as timestamp_type,\n            cast (true as \n    \n    BOOLEAN\n\n) as boolean_type\n    )\n\n    select\n    \n         string_type as name,\n    \n         string_type as schema,\n    \n         string_type as database,\n    \n         string_type as time_filter,\n    \n         string_type as metrics_groups,\n    \n         string_type as additional_metrics,\n    \n         string_type as metrics,\n    \n         string_type as columns,\n    \n         string_type as anomaly_detector,\n    \n         string_type as owners,\n    \n         boolean_type as selected\n    \n    from types_table\n    where string_type is not null\n", "relation_name": "DB_DBT_DEMO_101.L3_GOLD.re_data_monitored"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-15T17:10:01.184896Z", "completed_at": "2024-05-15T17:10:01.191172Z"}, {"name": "execute", "started_at": "2024-05-15T17:10:01.192659Z", "completed_at": "2024-05-15T17:10:01.192667Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.010475873947143555, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.re_data.re_data_run_started_at", "compiled": true, "compiled_code": "\n\nselect 1715792999475917.0 as run_started_at", "relation_name": "DB_DBT_DEMO_101.L3_GOLD.re_data_run_started_at"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-15T17:10:01.197074Z", "completed_at": "2024-05-15T17:10:01.205010Z"}, {"name": "execute", "started_at": "2024-05-15T17:10:01.206577Z", "completed_at": "2024-05-15T17:10:01.206585Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.012218713760375977, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.re_data.re_data_test_history", "compiled": true, "compiled_code": "\n\n\n    \n    with types_table as (\n        select\n            cast (null as \n    \n    STRING\n\n) as string_type,\n            cast (null as \n    \n    \n    \n    STRING\n\n\n\n) as long_string_type,\n            cast (1 as \n    \n    FLOAT\n\n) as numeric_type,\n            cast ('2000-01-10' as \n    \n    TIMESTAMP_NTZ\n\n) as timestamp_type,\n            cast (true as \n    \n    BOOLEAN\n\n) as boolean_type\n    )\n\n    select\n    \n         string_type as table_name,\n    \n         string_type as column_name,\n    \n         string_type as test_name,\n    \n         string_type as status,\n    \n         numeric_type as execution_time,\n    \n         string_type as message,\n    \n         numeric_type as failures_count,\n    \n         long_string_type as failures_json,\n    \n         long_string_type as failures_table,\n    \n         string_type as severity,\n    \n         long_string_type as compiled_sql,\n    \n         timestamp_type as run_at\n    \n    from types_table\n    where string_type is not null\n", "relation_name": "DB_DBT_DEMO_101.L3_GOLD.re_data_test_history"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-15T17:10:01.211157Z", "completed_at": "2024-05-15T17:10:01.214447Z"}, {"name": "execute", "started_at": "2024-05-15T17:10:01.215899Z", "completed_at": "2024-05-15T17:10:01.215905Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007622480392456055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sp_dbt_poc.stg_customers", "compiled": true, "compiled_code": "SELECT\n    CustomerID,\n    FirstName,\n    LastName,\n    FirstName || ' ' || LastName AS CustomerName,\n    Email,\n    Phone,\n    Address,\n    City,\n    State,\n    ZipCode,\n    Updated_at\nFROM\n    L1_BRONZE.customers", "relation_name": "DB_DBT_DEMO_101.L2_SILVER.stg_customers"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-15T17:10:01.220279Z", "completed_at": "2024-05-15T17:10:01.224350Z"}, {"name": "execute", "started_at": "2024-05-15T17:10:01.225857Z", "completed_at": "2024-05-15T17:10:01.225864Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.008298397064208984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sp_dbt_poc.stg_orderitems", "compiled": true, "compiled_code": "SELECT\n    OrderItemID,\n    OrderID,\n    ProductID,\n    Quantity,\n    UnitPrice,\n    Updated_at,\n    QUANTITY * UNITPRICE as TotalPrice\nFROM\n    L1_BRONZE.OrderItems", "relation_name": "DB_DBT_DEMO_101.L2_SILVER.stg_orderitems"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-15T17:10:01.230350Z", "completed_at": "2024-05-15T17:10:01.233509Z"}, {"name": "execute", "started_at": "2024-05-15T17:10:01.235000Z", "completed_at": "2024-05-15T17:10:01.235007Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007479190826416016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sp_dbt_poc.stg_orders", "compiled": true, "compiled_code": "SELECT\n    OrderID,\n    OrderDate,\n    CustomerID,\n    EmployeeID,\n    StoreID,\n    Status,\n    Updated_at\nFROM\n    L1_BRONZE.orders", "relation_name": "DB_DBT_DEMO_101.L2_SILVER.stg_orders"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-15T17:10:01.239455Z", "completed_at": "2024-05-15T17:10:01.251724Z"}, {"name": "execute", "started_at": "2024-05-15T17:10:01.253277Z", "completed_at": "2024-05-15T17:10:01.253286Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01674675941467285, "adapter_response": {}, "message": null, "failures": null, "unique_id": "operation.dbt_constraints.dbt_constraints-on-run-end-0", "compiled": true, "compiled_code": "", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-15T17:10:01.257784Z", "completed_at": "2024-05-15T17:10:01.263162Z"}, {"name": "execute", "started_at": "2024-05-15T17:10:01.264567Z", "completed_at": "2024-05-15T17:10:01.264574Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.009427785873413086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "operation.re_data.re_data-on-run-end-0", "compiled": true, "compiled_code": "", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-15T17:10:01.268891Z", "completed_at": "2024-05-15T17:10:01.273360Z"}, {"name": "execute", "started_at": "2024-05-15T17:10:01.274895Z", "completed_at": "2024-05-15T17:10:01.274902Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.008605718612670898, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.re_data.re_data_selected", "compiled": true, "compiled_code": "select \n    name, schema, database, time_filter, metrics, columns, anomaly_detector, owners\nfrom DB_DBT_DEMO_101.L3_GOLD.re_data_monitored\nwhere \n    selected = true", "relation_name": "DB_DBT_DEMO_101.L3_GOLD.re_data_selected"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-15T17:10:01.279403Z", "completed_at": "2024-05-15T17:10:01.284038Z"}, {"name": "execute", "started_at": "2024-05-15T17:10:01.285527Z", "completed_at": "2024-05-15T17:10:01.285534Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.009030342102050781, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.re_data.re_data_test_runs", "compiled": true, "compiled_code": "\n\nselect \n    sum(case when status = 'Fail' then 1 else 0 end) as failed,\n    sum(case when status = 'Pass' then 1 else 0 end) as passed,\n    run_at\nfrom DB_DBT_DEMO_101.L3_GOLD.re_data_test_history\ngroup by run_at\norder by run_at desc", "relation_name": "DB_DBT_DEMO_101.L3_GOLD.re_data_test_runs"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-15T17:10:01.290035Z", "completed_at": "2024-05-15T17:10:01.294959Z"}, {"name": "execute", "started_at": "2024-05-15T17:10:01.296456Z", "completed_at": "2024-05-15T17:10:01.296463Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.009073972702026367, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.sp_dbt_poc.test_stg_orderitems_max_flagship_product_quantity_per_order", "compiled": true, "compiled_code": "-- stg_orders for a product_id=5(flagship product), customers can only order at max 5 items\n-- Therefore return records where this isn't true to make the test fail\n-- SP Observation - Custom singular tests work better with soda IMHO. \n\nselect *\nfrom DB_DBT_DEMO_101.L2_SILVER.stg_orderitems \nwhere productid='101' and quantity > 5", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-15T17:10:01.300767Z", "completed_at": "2024-05-15T17:10:01.305462Z"}, {"name": "execute", "started_at": "2024-05-15T17:10:01.307009Z", "completed_at": "2024-05-15T17:10:01.307016Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.008817195892333984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sp_dbt_poc.customerorders", "compiled": true, "compiled_code": "\n\nWITH CUSTOMERORDERS AS (\n\nSELECT\n    c.CustomerID,\n    c.FirstName || ' ' || c.LastName AS CustomerName,\n    COUNT(o.OrderID) AS NumberOfOrders\nFROM\n    DB_DBT_DEMO_101.L2_SILVER.stg_customers c\nLEFT JOIN\n    DB_DBT_DEMO_101.L2_SILVER.stg_orders o ON c.CustomerID = o.CustomerID\nGROUP BY\n    c.CustomerID,\n    c.FirstName || ' ' || c.LastName\nORDER BY\n    c.CustomerID\n)\nSELECT *\nFROM CUSTOMERORDERS", "relation_name": "DB_DBT_DEMO_101.L3_GOLD.customerorders"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-15T17:10:01.311495Z", "completed_at": "2024-05-15T17:10:01.315868Z"}, {"name": "execute", "started_at": "2024-05-15T17:10:01.317353Z", "completed_at": "2024-05-15T17:10:01.317360Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.00880289077758789, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sp_dbt_poc.fact_orders", "compiled": true, "compiled_code": "SELECT\n    o.OrderID,\n    o.OrderDate,\n    O.CustomerID,\n    o.EmployeeID,\n    o.StoreID,\n    o.Status,\n    o.Updated_at,\n    count(distinct  o.orderID) as OrderCount,\n    sum(oi.TotalPrice) as Revenue    \nFROM\n    DB_DBT_DEMO_101.L2_SILVER.stg_orders o\nJOIN\n    DB_DBT_DEMO_101.L2_SILVER.stg_orderitems oi on o.orderID = oi.orderID\nGROUP BY \n    o.OrderID,\n    o.OrderDate,\n    O.CustomerID,\n    o.EmployeeID,\n    o.StoreID,\n    o.Status,\n    o.Updated_at", "relation_name": "DB_DBT_DEMO_101.L2_SILVER.fact_orders"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-15T17:10:01.321872Z", "completed_at": "2024-05-15T17:10:01.336845Z"}, {"name": "execute", "started_at": "2024-05-15T17:10:01.338622Z", "completed_at": "2024-05-15T17:10:01.338630Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.019527912139892578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.sp_dbt_poc.accepted_values_stg_orders_STATUS__Pending__Completed.905842c259", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        STATUS as value_field,\n        count(*) as n_records\n\n    from DB_DBT_DEMO_101.L2_SILVER.stg_orders\n    group by STATUS\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'Pending','Completed'\n)\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-15T17:10:01.342950Z", "completed_at": "2024-05-15T17:10:01.738416Z"}, {"name": "execute", "started_at": "2024-05-15T17:10:01.739950Z", "completed_at": "2024-05-15T17:10:01.739983Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.5166878700256348, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.re_data.re_data_columns", "compiled": true, "compiled_code": "\n\n-- depends_on: DB_DBT_DEMO_101.L3_GOLD.re_data_run_started_at\n-- depends_on: DB_DBT_DEMO_101.L3_GOLD.re_data_monitored\n-- depends_on: DB_DBT_DEMO_101.L3_GOLD.re_data_selected\n\n\n    \n    \n\n    with columns_from_select as (\n        \n            \n            \n    \n    \n    select\n        table_name,\n        table_schema,\n        table_catalog,\n        column_name,\n        data_type,\n        is_nullable\n    from\n        DB_DBT_DEMO_101.INFORMATION_SCHEMA.COLUMNS\n    where\n        table_schema = 'L3_GOLD'\n\n union all\n        \n            \n            \n    \n    \n    select\n        table_name,\n        table_schema,\n        table_catalog,\n        column_name,\n        data_type,\n        is_nullable\n    from\n        DB_DBT_DEMO_101.INFORMATION_SCHEMA.COLUMNS\n    where\n        table_schema = 'L2_SILVER'\n\n\n        \n    )\n\n    select\n        cast (table_name as \n    \n    STRING\n\n ) as name,\n        cast (table_schema as \n    \n    STRING\n\n ) as schema,\n        cast (table_catalog as \n    \n    STRING\n\n ) as database,\n        cast (column_name as \n    \n    STRING\n\n ) as column_name,\n        cast (data_type as \n    \n    STRING\n\n ) as data_type,\n        cast (case is_nullable when 'YES' then 1 else 0 end as \n    \n    BOOLEAN\n\n ) as is_nullable,\n        cast (\n  current_timestamp::timestamp\n as \n    \n    TIMESTAMP_NTZ\n\n) as computed_on\n    from columns_from_select\n\n    \n\n", "relation_name": "DB_DBT_DEMO_101.L3_GOLD.re_data_columns"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-15T17:10:01.861913Z", "completed_at": "2024-05-15T17:10:01.870497Z"}, {"name": "execute", "started_at": "2024-05-15T17:10:01.872017Z", "completed_at": "2024-05-15T17:10:01.872027Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.013013362884521484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.sp_dbt_poc.check_distinct_min_max_counts_customerorders_NUMBEROFORDERS__2000__1.8c3d710e0d", "compiled": true, "compiled_code": "\n    WITH get_metrics AS (\n        SELECT COUNT( DISTINCT NUMBEROFORDERS)  AS dist_count_rank\n                , MIN(NUMBEROFORDERS)    AS min_rank\n                , MAX(NUMBEROFORDERS)    AS max_rank\n        FROM DB_DBT_DEMO_101.L3_GOLD.customerorders\n    ) \n \n    SELECT * \n    FROM get_metrics\n    WHERE dist_count_rank > 2000\n        AND min_rank < 1\n        AND max_rank > 2000\n \n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-15T17:10:01.876445Z", "completed_at": "2024-05-15T17:10:01.943788Z"}, {"name": "execute", "started_at": "2024-05-15T17:10:01.945308Z", "completed_at": "2024-05-15T17:10:01.945318Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0716238021850586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sp_dbt_poc.customerrevenue", "compiled": true, "compiled_code": "\n\nSELECT\n    fact_o.CustomerID,\n    stg_c.CustomerName,\n    SUM(fact_o.OrderCount) as OrderCount,\n    SUM(fact_o.Revenue)::float as Revenue\nFROM DB_DBT_DEMO_101.L2_SILVER.fact_orders fact_o\nJOIN DB_DBT_DEMO_101.L2_SILVER.stg_customers stg_c\n    ON fact_o.CustomerID = stg_c.CustomerID\nGROUP BY\n    fact_o.CustomerID,\n    stg_c.CustomerName", "relation_name": "DB_DBT_DEMO_101.L3_GOLD.customerrevenue"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-15T17:10:01.950033Z", "completed_at": "2024-05-15T17:10:01.973223Z"}, {"name": "execute", "started_at": "2024-05-15T17:10:01.974804Z", "completed_at": "2024-05-15T17:10:01.974815Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.027663230895996094, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.re_data.re_data_columns_over_time", "compiled": true, "compiled_code": "\n\n\nwith columns as (\n\nselect\n    \n    \n    '\"' || cols.database || '\"' || '.' || '\"' || cols.schema || '\"' || '.' || '\"' || cols.name || '\"'\n\n as table_name,\n    cols.column_name,\n    cols.data_type,\n    cols.is_nullable,\n    cast (\n  current_timestamp::timestamp\n as \n    \n    TIMESTAMP_NTZ\n\n ) as detected_time\nfrom\n    DB_DBT_DEMO_101.L3_GOLD.re_data_columns cols, DB_DBT_DEMO_101.L3_GOLD.re_data_selected tables\nwhere\n    cols.name = tables.name and cols.schema = tables.schema and cols.database = tables.database\n)\n\nselect\n    cast (md5(cast(coalesce(cast(table_name as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(column_name as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(detected_time as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) as \n    \n    STRING\n\n ) as id,\n    table_name,\n    column_name,\n    data_type,\n    is_nullable,\n    detected_time\nfrom columns", "relation_name": "DB_DBT_DEMO_101.L3_GOLD.re_data_columns_over_time"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-15T17:10:01.979453Z", "completed_at": "2024-05-15T17:10:01.988691Z"}, {"name": "execute", "started_at": "2024-05-15T17:10:01.990267Z", "completed_at": "2024-05-15T17:10:01.990277Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.013797760009765625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.re_data.re_data_last_base_metrics_part0", "compiled": true, "compiled_code": "\n\n-- depends_on: DB_DBT_DEMO_101.L3_GOLD.re_data_columns\n\n\n\n\n    \n    \n    with types_table as (\n        select\n            cast (null as \n    \n    STRING\n\n) as string_type,\n            cast (null as \n    \n    \n    \n    STRING\n\n\n\n) as long_string_type,\n            cast (1 as \n    \n    FLOAT\n\n) as numeric_type,\n            cast ('2000-01-10' as \n    \n    TIMESTAMP_NTZ\n\n) as timestamp_type,\n            cast (true as \n    \n    BOOLEAN\n\n) as boolean_type\n    )\n\n    select\n    \n         string_type as table_name,\n    \n         string_type as column_name,\n    \n         string_type as metric,\n    \n         numeric_type as value\n    \n    from types_table\n    where string_type is not null\n\n\n\n", "relation_name": "DB_DBT_DEMO_101.L3_GOLD.re_data_last_base_metrics_part0"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-15T17:10:01.994911Z", "completed_at": "2024-05-15T17:10:02.002163Z"}, {"name": "execute", "started_at": "2024-05-15T17:10:02.003868Z", "completed_at": "2024-05-15T17:10:02.003875Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.011778593063354492, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.re_data.re_data_last_base_metrics_part1", "compiled": true, "compiled_code": "\n\n-- depends_on: DB_DBT_DEMO_101.L3_GOLD.re_data_columns\n\n\n\n\n    \n    \n    with types_table as (\n        select\n            cast (null as \n    \n    STRING\n\n) as string_type,\n            cast (null as \n    \n    \n    \n    STRING\n\n\n\n) as long_string_type,\n            cast (1 as \n    \n    FLOAT\n\n) as numeric_type,\n            cast ('2000-01-10' as \n    \n    TIMESTAMP_NTZ\n\n) as timestamp_type,\n            cast (true as \n    \n    BOOLEAN\n\n) as boolean_type\n    )\n\n    select\n    \n         string_type as table_name,\n    \n         string_type as column_name,\n    \n         string_type as metric,\n    \n         numeric_type as value\n    \n    from types_table\n    where string_type is not null\n\n\n\n", "relation_name": "DB_DBT_DEMO_101.L3_GOLD.re_data_last_base_metrics_part1"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-15T17:10:02.008391Z", "completed_at": "2024-05-15T17:10:02.014730Z"}, {"name": "execute", "started_at": "2024-05-15T17:10:02.016207Z", "completed_at": "2024-05-15T17:10:02.016215Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01064157485961914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.re_data.re_data_last_base_metrics_part2", "compiled": true, "compiled_code": "\n\n-- depends_on: DB_DBT_DEMO_101.L3_GOLD.re_data_columns\n\n\n\n\n    \n    \n    with types_table as (\n        select\n            cast (null as \n    \n    STRING\n\n) as string_type,\n            cast (null as \n    \n    \n    \n    STRING\n\n\n\n) as long_string_type,\n            cast (1 as \n    \n    FLOAT\n\n) as numeric_type,\n            cast ('2000-01-10' as \n    \n    TIMESTAMP_NTZ\n\n) as timestamp_type,\n            cast (true as \n    \n    BOOLEAN\n\n) as boolean_type\n    )\n\n    select\n    \n         string_type as table_name,\n    \n         string_type as column_name,\n    \n         string_type as metric,\n    \n         numeric_type as value\n    \n    from types_table\n    where string_type is not null\n\n\n\n", "relation_name": "DB_DBT_DEMO_101.L3_GOLD.re_data_last_base_metrics_part2"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-15T17:10:02.020686Z", "completed_at": "2024-05-15T17:10:02.027036Z"}, {"name": "execute", "started_at": "2024-05-15T17:10:02.028514Z", "completed_at": "2024-05-15T17:10:02.028522Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01057744026184082, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.re_data.re_data_last_base_metrics_part3", "compiled": true, "compiled_code": "\n\n-- depends_on: DB_DBT_DEMO_101.L3_GOLD.re_data_columns\n\n\n\n\n    \n    \n    with types_table as (\n        select\n            cast (null as \n    \n    STRING\n\n) as string_type,\n            cast (null as \n    \n    \n    \n    STRING\n\n\n\n) as long_string_type,\n            cast (1 as \n    \n    FLOAT\n\n) as numeric_type,\n            cast ('2000-01-10' as \n    \n    TIMESTAMP_NTZ\n\n) as timestamp_type,\n            cast (true as \n    \n    BOOLEAN\n\n) as boolean_type\n    )\n\n    select\n    \n         string_type as table_name,\n    \n         string_type as column_name,\n    \n         string_type as metric,\n    \n         numeric_type as value\n    \n    from types_table\n    where string_type is not null\n\n\n\n", "relation_name": "DB_DBT_DEMO_101.L3_GOLD.re_data_last_base_metrics_part3"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-15T17:10:02.032893Z", "completed_at": "2024-05-15T17:10:02.340167Z"}, {"name": "execute", "started_at": "2024-05-15T17:10:02.341764Z", "completed_at": "2024-05-15T17:10:02.341777Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.41481852531433105, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.re_data.re_data_last_table_samples", "compiled": true, "compiled_code": "\n    \n    \n        -- depends_on: DB_DBT_DEMO_101.L3_GOLD.re_data_selected\n    \n        -- depends_on: DB_DBT_DEMO_101.L3_GOLD.re_data_monitored\n    \n        -- depends_on: DB_DBT_DEMO_101.L3_GOLD.re_data_columns\n    \n        -- depends_on: DB_DBT_DEMO_101.L3_GOLD.re_data_run_started_at\n    \n        -- depends_on: DB_DBT_DEMO_101.L3_GOLD.re_data_last_table_samples_part\n    \n\n\n\n    \n\n    \n        \n    \n    \n\n    \n    \n    \n    with types_table as (\n        select\n            cast (null as \n    \n    STRING\n\n) as string_type,\n            cast (null as \n    \n    \n    \n    STRING\n\n\n\n) as long_string_type,\n            cast (1 as \n    \n    FLOAT\n\n) as numeric_type,\n            cast ('2000-01-10' as \n    \n    TIMESTAMP_NTZ\n\n) as timestamp_type,\n            cast (true as \n    \n    BOOLEAN\n\n) as boolean_type\n    )\n\n    select\n    \n         string_type as table_name,\n    \n         string_type as sample_data\n    \n    from types_table\n    where string_type is not null\n\n\n\n", "relation_name": "DB_DBT_DEMO_101.L3_GOLD.re_data_last_table_samples"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-15T17:10:02.449915Z", "completed_at": "2024-05-15T17:10:02.456433Z"}, {"name": "execute", "started_at": "2024-05-15T17:10:02.457987Z", "completed_at": "2024-05-15T17:10:02.457997Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.010907411575317383, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.sp_dbt_poc.check_distinct_min_max_counts_customerrevenue_ORDERCOUNT__2000__1.cf468ed9df", "compiled": true, "compiled_code": "\n    WITH get_metrics AS (\n        SELECT COUNT( DISTINCT ORDERCOUNT)  AS dist_count_rank\n                , MIN(ORDERCOUNT)    AS min_rank\n                , MAX(ORDERCOUNT)    AS max_rank\n        FROM DB_DBT_DEMO_101.L3_GOLD.customerrevenue\n    ) \n \n    SELECT * \n    FROM get_metrics\n    WHERE dist_count_rank > 2000\n        AND min_rank < 1\n        AND max_rank > 2000\n \n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-15T17:10:02.462387Z", "completed_at": "2024-05-15T17:10:02.848830Z"}, {"name": "execute", "started_at": "2024-05-15T17:10:02.850434Z", "completed_at": "2024-05-15T17:10:02.850447Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.5068979263305664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.sp_dbt_poc.dbt_expectations_expect_table_column_count_to_equal_customerrevenue_4.d8fd429a2a", "compiled": true, "compiled_code": "with test_data as (\n\n    select\n        4 as number_actual_columns,\n        4 as value\n\n)\nselect *\nfrom test_data\nwhere\n    number_actual_columns != value", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-15T17:10:02.971255Z", "completed_at": "2024-05-15T17:10:02.992936Z"}, {"name": "execute", "started_at": "2024-05-15T17:10:02.994641Z", "completed_at": "2024-05-15T17:10:02.994654Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.026219606399536133, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.sp_dbt_poc.dbt_expectations_expect_table_row_count_to_be_between_customerrevenue_1500__1.e7dc6cbf73", "compiled": true, "compiled_code": "\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n( 1=1 and count(*) >= 1 and count(*) <= 1500\n)\n as expression\n\n\n    from DB_DBT_DEMO_101.L3_GOLD.customerrevenue\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-15T17:10:02.999556Z", "completed_at": "2024-05-15T17:10:03.387461Z"}, {"name": "execute", "started_at": "2024-05-15T17:10:03.388995Z", "completed_at": "2024-05-15T17:10:03.389008Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.5496160984039307, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.re_data.re_data_schema_changes", "compiled": true, "compiled_code": "\n\n-- depends_on: DB_DBT_DEMO_101.L3_GOLD.re_data_run_started_at\n-- depends_on: DB_DBT_DEMO_101.L3_GOLD.re_data_columns_over_time\n-- depends_on: DB_DBT_DEMO_101.L3_GOLD.re_data_monitored\n-- depends_on: DB_DBT_DEMO_101.L3_GOLD.re_data_selected\n\n\n    \n\n\n\n    \n    \n    with types_table as (\n        select\n            cast (null as \n    \n    STRING\n\n) as string_type,\n            cast (null as \n    \n    \n    \n    STRING\n\n\n\n) as long_string_type,\n            cast (1 as \n    \n    FLOAT\n\n) as numeric_type,\n            cast ('2000-01-10' as \n    \n    TIMESTAMP_NTZ\n\n) as timestamp_type,\n            cast (true as \n    \n    BOOLEAN\n\n) as boolean_type\n    )\n\n    select\n    \n         string_type as id,\n    \n         string_type as table_name,\n    \n         string_type as operation,\n    \n         string_type as column_name,\n    \n         string_type as data_type,\n    \n         boolean_type as is_nullable,\n    \n         string_type as prev_column_name,\n    \n         string_type as prev_data_type,\n    \n         boolean_type as prev_is_nullable,\n    \n         timestamp_type as detected_time\n    \n    from types_table\n    where string_type is not null\n\n", "relation_name": "DB_DBT_DEMO_101.L3_GOLD.re_data_schema_changes"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-15T17:10:03.550875Z", "completed_at": "2024-05-15T17:10:03.914023Z"}, {"name": "execute", "started_at": "2024-05-15T17:10:03.915559Z", "completed_at": "2024-05-15T17:10:03.915571Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.4991145133972168, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.re_data.re_data_last_base_metrics_thread0", "compiled": true, "compiled_code": "\n    \n    \n    \n        -- depends_on: DB_DBT_DEMO_101.L3_GOLD.re_data_selected\n    \n        -- depends_on: DB_DBT_DEMO_101.L3_GOLD.re_data_monitored\n    \n        -- depends_on: DB_DBT_DEMO_101.L3_GOLD.re_data_columns\n    \n        -- depends_on: DB_DBT_DEMO_101.L3_GOLD.re_data_run_started_at\n    \n        -- depends_on: DB_DBT_DEMO_101.L3_GOLD.re_data_last_base_metrics_part0\n    \n\n\n\n    \n\n    \n\n    \n    \n    \n    with types_table as (\n        select\n            cast (null as \n    \n    STRING\n\n) as string_type,\n            cast (null as \n    \n    \n    \n    STRING\n\n\n\n) as long_string_type,\n            cast (1 as \n    \n    FLOAT\n\n) as numeric_type,\n            cast ('2000-01-10' as \n    \n    TIMESTAMP_NTZ\n\n) as timestamp_type,\n            cast (true as \n    \n    BOOLEAN\n\n) as boolean_type\n    )\n\n    select\n    \n         string_type as table_name,\n    \n         string_type as column_name,\n    \n         string_type as metric,\n    \n         numeric_type as value\n    \n    from types_table\n    where string_type is not null\n\n\n\n", "relation_name": "DB_DBT_DEMO_101.L3_GOLD.re_data_last_base_metrics_thread0"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-15T17:10:04.052094Z", "completed_at": "2024-05-15T17:10:04.434986Z"}, {"name": "execute", "started_at": "2024-05-15T17:10:04.436524Z", "completed_at": "2024-05-15T17:10:04.436535Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.5262963771820068, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.re_data.re_data_last_base_metrics_thread1", "compiled": true, "compiled_code": "\n    \n    \n    \n        -- depends_on: DB_DBT_DEMO_101.L3_GOLD.re_data_selected\n    \n        -- depends_on: DB_DBT_DEMO_101.L3_GOLD.re_data_monitored\n    \n        -- depends_on: DB_DBT_DEMO_101.L3_GOLD.re_data_columns\n    \n        -- depends_on: DB_DBT_DEMO_101.L3_GOLD.re_data_run_started_at\n    \n        -- depends_on: DB_DBT_DEMO_101.L3_GOLD.re_data_last_base_metrics_part1\n    \n\n\n\n    \n\n    \n\n    \n    \n    \n    with types_table as (\n        select\n            cast (null as \n    \n    STRING\n\n) as string_type,\n            cast (null as \n    \n    \n    \n    STRING\n\n\n\n) as long_string_type,\n            cast (1 as \n    \n    FLOAT\n\n) as numeric_type,\n            cast ('2000-01-10' as \n    \n    TIMESTAMP_NTZ\n\n) as timestamp_type,\n            cast (true as \n    \n    BOOLEAN\n\n) as boolean_type\n    )\n\n    select\n    \n         string_type as table_name,\n    \n         string_type as column_name,\n    \n         string_type as metric,\n    \n         numeric_type as value\n    \n    from types_table\n    where string_type is not null\n\n\n\n", "relation_name": "DB_DBT_DEMO_101.L3_GOLD.re_data_last_base_metrics_thread1"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-15T17:10:04.580385Z", "completed_at": "2024-05-15T17:10:04.933589Z"}, {"name": "execute", "started_at": "2024-05-15T17:10:04.935171Z", "completed_at": "2024-05-15T17:10:04.935183Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.48787927627563477, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.re_data.re_data_last_base_metrics_thread2", "compiled": true, "compiled_code": "\n    \n    \n    \n        -- depends_on: DB_DBT_DEMO_101.L3_GOLD.re_data_selected\n    \n        -- depends_on: DB_DBT_DEMO_101.L3_GOLD.re_data_monitored\n    \n        -- depends_on: DB_DBT_DEMO_101.L3_GOLD.re_data_columns\n    \n        -- depends_on: DB_DBT_DEMO_101.L3_GOLD.re_data_run_started_at\n    \n        -- depends_on: DB_DBT_DEMO_101.L3_GOLD.re_data_last_base_metrics_part2\n    \n\n\n\n    \n\n    \n\n    \n    \n    \n    with types_table as (\n        select\n            cast (null as \n    \n    STRING\n\n) as string_type,\n            cast (null as \n    \n    \n    \n    STRING\n\n\n\n) as long_string_type,\n            cast (1 as \n    \n    FLOAT\n\n) as numeric_type,\n            cast ('2000-01-10' as \n    \n    TIMESTAMP_NTZ\n\n) as timestamp_type,\n            cast (true as \n    \n    BOOLEAN\n\n) as boolean_type\n    )\n\n    select\n    \n         string_type as table_name,\n    \n         string_type as column_name,\n    \n         string_type as metric,\n    \n         numeric_type as value\n    \n    from types_table\n    where string_type is not null\n\n\n\n", "relation_name": "DB_DBT_DEMO_101.L3_GOLD.re_data_last_base_metrics_thread2"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-15T17:10:05.070282Z", "completed_at": "2024-05-15T17:10:05.519683Z"}, {"name": "execute", "started_at": "2024-05-15T17:10:05.521242Z", "completed_at": "2024-05-15T17:10:05.521255Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.5843772888183594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.re_data.re_data_last_base_metrics_thread3", "compiled": true, "compiled_code": "\n    \n    \n    \n        -- depends_on: DB_DBT_DEMO_101.L3_GOLD.re_data_selected\n    \n        -- depends_on: DB_DBT_DEMO_101.L3_GOLD.re_data_monitored\n    \n        -- depends_on: DB_DBT_DEMO_101.L3_GOLD.re_data_columns\n    \n        -- depends_on: DB_DBT_DEMO_101.L3_GOLD.re_data_run_started_at\n    \n        -- depends_on: DB_DBT_DEMO_101.L3_GOLD.re_data_last_base_metrics_part3\n    \n\n\n\n    \n\n    \n\n    \n    \n    \n    with types_table as (\n        select\n            cast (null as \n    \n    STRING\n\n) as string_type,\n            cast (null as \n    \n    \n    \n    STRING\n\n\n\n) as long_string_type,\n            cast (1 as \n    \n    FLOAT\n\n) as numeric_type,\n            cast ('2000-01-10' as \n    \n    TIMESTAMP_NTZ\n\n) as timestamp_type,\n            cast (true as \n    \n    BOOLEAN\n\n) as boolean_type\n    )\n\n    select\n    \n         string_type as table_name,\n    \n         string_type as column_name,\n    \n         string_type as metric,\n    \n         numeric_type as value\n    \n    from types_table\n    where string_type is not null\n\n\n\n", "relation_name": "DB_DBT_DEMO_101.L3_GOLD.re_data_last_base_metrics_thread3"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-15T17:10:05.656733Z", "completed_at": "2024-05-15T17:10:05.664215Z"}, {"name": "execute", "started_at": "2024-05-15T17:10:05.665767Z", "completed_at": "2024-05-15T17:10:05.665777Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.011779069900512695, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.re_data.re_data_table_samples", "compiled": true, "compiled_code": "\n\n-- depends_on: DB_DBT_DEMO_101.L3_GOLD.re_data_last_table_samples\n-- depends_on: DB_DBT_DEMO_101.L3_GOLD.re_data_last_table_samples_part\n\nselect\n    table_name,\n    sample_data,\n    cast (\n  current_timestamp::timestamp\n as \n    \n    TIMESTAMP_NTZ\n\n) as sampled_on\n\nfrom DB_DBT_DEMO_101.L3_GOLD.re_data_last_table_samples_part", "relation_name": "DB_DBT_DEMO_101.L3_GOLD.re_data_table_samples"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-15T17:10:05.670193Z", "completed_at": "2024-05-15T17:10:05.702219Z"}, {"name": "execute", "started_at": "2024-05-15T17:10:05.703757Z", "completed_at": "2024-05-15T17:10:05.703767Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.03634357452392578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.re_data.re_data_base_metrics", "compiled": true, "compiled_code": "\n\n-- depends_on: DB_DBT_DEMO_101.L3_GOLD.re_data_columns\n-- depends_on: DB_DBT_DEMO_101.L3_GOLD.re_data_last_base_metrics_thread0\n-- depends_on: DB_DBT_DEMO_101.L3_GOLD.re_data_last_base_metrics_thread1\n-- depends_on: DB_DBT_DEMO_101.L3_GOLD.re_data_last_base_metrics_thread2\n-- depends_on: DB_DBT_DEMO_101.L3_GOLD.re_data_last_base_metrics_thread3\n-- depends_on: DB_DBT_DEMO_101.L3_GOLD.re_data_last_base_metrics_part0\n-- depends_on: DB_DBT_DEMO_101.L3_GOLD.re_data_last_base_metrics_part1\n-- depends_on: DB_DBT_DEMO_101.L3_GOLD.re_data_last_base_metrics_part2\n-- depends_on: DB_DBT_DEMO_101.L3_GOLD.re_data_last_base_metrics_part3\n-- depends_on: DB_DBT_DEMO_101.L3_GOLD.re_data_run_started_at\n-- depends_on: DB_DBT_DEMO_101.L3_GOLD.re_data_monitored\n-- depends_on: DB_DBT_DEMO_101.L3_GOLD.re_data_selected\n\nwith \n\nwith_time_window as (\n    \n    \n        \n        select\n            *,\n            \n    cast('2024-05-14 00:00:00' as timestamp) \n as time_window_start,\n            \n    cast('2024-05-15 00:00:00' as timestamp)\n as time_window_end\n        from DB_DBT_DEMO_101.L3_GOLD.re_data_last_base_metrics_part0 union all\n    \n        \n        select\n            *,\n            \n    cast('2024-05-14 00:00:00' as timestamp) \n as time_window_start,\n            \n    cast('2024-05-15 00:00:00' as timestamp)\n as time_window_end\n        from DB_DBT_DEMO_101.L3_GOLD.re_data_last_base_metrics_part1 union all\n    \n        \n        select\n            *,\n            \n    cast('2024-05-14 00:00:00' as timestamp) \n as time_window_start,\n            \n    cast('2024-05-15 00:00:00' as timestamp)\n as time_window_end\n        from DB_DBT_DEMO_101.L3_GOLD.re_data_last_base_metrics_part2 union all\n    \n        \n        select\n            *,\n            \n    cast('2024-05-14 00:00:00' as timestamp) \n as time_window_start,\n            \n    cast('2024-05-15 00:00:00' as timestamp)\n as time_window_end\n        from DB_DBT_DEMO_101.L3_GOLD.re_data_last_base_metrics_part3\n    \n)\nselect\n    cast (md5(cast(coalesce(cast(table_name as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(column_name as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(metric as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(time_window_start as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(time_window_end as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) as \n    \n    STRING\n\n ) as id,\n    cast (table_name as \n    \n    STRING\n\n ) as table_name,\n    cast (column_name as \n    \n    STRING\n\n ) as column_name,\n    cast (metric as \n    \n    STRING\n\n ) as metric,\n    cast (value as \n    \n    FLOAT\n\n ) as value,\n    cast (time_window_start as \n    \n    TIMESTAMP_NTZ\n\n ) as time_window_start,\n    cast (time_window_end as \n    \n    TIMESTAMP_NTZ\n\n ) as time_window_end,\n    cast (\n        \n    \n   timediff(second, time_window_start, time_window_end)\n\n as \n    INTEGER\n\n    ) as interval_length_sec,\n    cast (\n  current_timestamp::timestamp\n as \n    \n    TIMESTAMP_NTZ\n\n) as computed_on\nfrom with_time_window", "relation_name": "DB_DBT_DEMO_101.L3_GOLD.re_data_base_metrics"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-15T17:10:05.708589Z", "completed_at": "2024-05-15T17:10:05.714557Z"}, {"name": "execute", "started_at": "2024-05-15T17:10:05.716054Z", "completed_at": "2024-05-15T17:10:05.716061Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01008462905883789, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.re_data.re_data_last_metrics", "compiled": true, "compiled_code": "select\n    table_name,\n    column_name,\n    metric,\n    value as last_value,\n    interval_length_sec,\n    computed_on\nfrom \n    DB_DBT_DEMO_101.L3_GOLD.re_data_base_metrics\nwhere\n    time_window_end =\n    cast('2024-05-15 00:00:00' as timestamp)\n", "relation_name": "DB_DBT_DEMO_101.L3_GOLD.re_data_last_metrics"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-15T17:10:05.720485Z", "completed_at": "2024-05-15T17:10:05.746310Z"}, {"name": "execute", "started_at": "2024-05-15T17:10:05.747817Z", "completed_at": "2024-05-15T17:10:05.747826Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.030083417892456055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.re_data.re_data_last_stats", "compiled": true, "compiled_code": "\n\nwith median_value as (\n    select distinct\n        table_name,\n        column_name,\n        metric,\n        interval_length_sec,\n        avg(value)  over(partition by table_name, column_name, metric, interval_length_sec)  as last_avg,\n        \n\n    percentile_cont( \n        0.25 )\n        within group ( order by value )\n        over ( partition by table_name, column_name, metric, interval_length_sec )\n\n as last_first_quartile,\n        \n\n    percentile_cont( \n        0.5 )\n        within group ( order by value )\n        over ( partition by table_name, column_name, metric, interval_length_sec )\n\n as last_median,\n        \n\n    percentile_cont( \n        0.75 )\n        within group ( order by value )\n        over ( partition by table_name, column_name, metric, interval_length_sec )\n\n as last_third_quartile\n    from\n        DB_DBT_DEMO_101.L3_GOLD.re_data_base_metrics\n    where\n        time_window_end >\n   \n    DATEADD('DAY', -30, \n    cast('2024-05-14 00:00:00' as timestamp) \n)\n\nand\n        time_window_end <=\n    cast('2024-05-15 00:00:00' as timestamp)\n\n    \n), abs_deviation as (\n    select \n        s.table_name,\n        s.column_name,\n        s.metric,\n        s.interval_length_sec,\n        abs( s.value - mv.last_avg ) as absolute_deviation_from_mean,\n        abs( s.value - mv.last_median ) as absolute_deviation_from_median\n    from\n        DB_DBT_DEMO_101.L3_GOLD.re_data_base_metrics s\n    left join \n        median_value mv\n        on\n            s.table_name = mv.table_name and\n            s.column_name = mv.column_name and\n            s.metric = mv.metric and\n            s.interval_length_sec = mv.interval_length_sec\n    where\n        s.time_window_end >\n   \n    DATEADD('DAY', -30, \n    cast('2024-05-14 00:00:00' as timestamp) \n)\n\nand\n        s.time_window_end <=\n    cast('2024-05-15 00:00:00' as timestamp)\n), median_abs_deviation as (\n    select distinct\n        table_name,\n        column_name,\n        metric,\n        interval_length_sec,\n        avg(absolute_deviation_from_mean)  over(partition by table_name, column_name, metric, interval_length_sec)  as mean_absolute_deviation,\n        \n\n    percentile_cont( \n        0.5 )\n        within group ( order by absolute_deviation_from_median )\n        over ( partition by table_name, column_name, metric, interval_length_sec )\n\n as median_absolute_deviation\n    from\n        abs_deviation\n    \n), stats as (\n    select\n        table_name,\n        column_name,\n        metric,\n        stddev(value) as last_stddev,\n        max(time_window_end) as last_metric_time,\n        interval_length_sec,\n        max(computed_on) as computed_on\n    from\n        DB_DBT_DEMO_101.L3_GOLD.re_data_base_metrics\n    where\n        time_window_end >\n   \n    DATEADD('DAY', -30, \n    cast('2024-05-14 00:00:00' as timestamp) \n)\n\nand\n        time_window_end <=\n    cast('2024-05-15 00:00:00' as timestamp)\ngroup by\n        table_name, column_name, metric, interval_length_sec\n)\n\nselect\n    s.table_name,\n    s.column_name,\n    s.metric,\n    mv.last_avg,\n    s.last_stddev,\n    s.last_metric_time,\n    s.interval_length_sec,\n    s.computed_on,\n    mv.last_median,\n    mv.last_first_quartile,\n    mv.last_third_quartile,\n    md.median_absolute_deviation last_median_absolute_deviation,\n    md.mean_absolute_deviation last_mean_absolute_deviation\nfrom\n    stats s\nleft join\n    median_value mv\n    on\n        s.table_name = mv.table_name and\n        s.column_name = mv.column_name and\n        s.metric = mv.metric and\n        s.interval_length_sec = mv.interval_length_sec\nleft join\n    median_abs_deviation md\n    on \n        s.table_name = md.table_name and\n        s.column_name = md.column_name and\n        s.metric = md.metric and\n        s.interval_length_sec = md.interval_length_sec", "relation_name": "DB_DBT_DEMO_101.L3_GOLD.re_data_last_stats"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-15T17:10:05.752364Z", "completed_at": "2024-05-15T17:10:05.757052Z"}, {"name": "execute", "started_at": "2024-05-15T17:10:05.758574Z", "completed_at": "2024-05-15T17:10:05.758581Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.00899815559387207, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.re_data.re_data_metrics", "compiled": true, "compiled_code": "select * from DB_DBT_DEMO_101.L3_GOLD.re_data_base_metrics", "relation_name": "DB_DBT_DEMO_101.L3_GOLD.re_data_metrics"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-15T17:10:05.763053Z", "completed_at": "2024-05-15T17:10:05.773449Z"}, {"name": "execute", "started_at": "2024-05-15T17:10:05.775007Z", "completed_at": "2024-05-15T17:10:05.775015Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01483607292175293, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.re_data.re_data_z_score", "compiled": true, "compiled_code": "\n\nwith z_score_without_id as (\n\n    select\n        stats.table_name as table_name,\n        stats.column_name as column_name,\n        stats.metric as metric,\n        stats.interval_length_sec,\n        (last_metric.last_value - stats.last_avg) / (stats.last_stddev + 0.0000000001) as z_score_value,\n        case\n            when stats.last_median_absolute_deviation = 0 then\n                (last_metric.last_value - stats.last_median) / (1.253314 * (stats.last_mean_absolute_deviation + 0.0000000001))\n            else\n                (0.6745 * (last_metric.last_value - stats.last_median)) / (stats.last_median_absolute_deviation + 0.0000000001) \n        end as modified_z_score_value,\n        last_metric.last_value as last_value,\n        stats.last_avg as last_avg,\n        stats.last_median as last_median,\n        stats.last_stddev as last_stddev,\n        stats.last_median_absolute_deviation,\n        stats.last_mean_absolute_deviation,\n        stats.last_third_quartile - stats.last_first_quartile as last_iqr,\n        stats.last_first_quartile,\n        stats.last_third_quartile,\n        \n    cast('2024-05-15 00:00:00' as timestamp)\n as time_window_end,\n        cast( \n  current_timestamp::timestamp\n as \n    \n    TIMESTAMP_NTZ\n\n ) as computed_on\n    from\n        DB_DBT_DEMO_101.L3_GOLD.re_data_last_stats as stats,\n        DB_DBT_DEMO_101.L3_GOLD.re_data_last_metrics as last_metric\n    where\n        stats.table_name = last_metric.table_name and\n        stats.column_name = last_metric.column_name and\n        stats.metric = last_metric.metric and\n        (\n            stats.interval_length_sec = last_metric.interval_length_sec or\n            (stats.interval_length_sec is null and last_metric.interval_length_sec is null)\n        ) and\n        last_metric.last_value is not null and\n        stats.last_avg is not null and\n        stats.last_stddev is not null\n    )\n\nselect\n    cast (md5(cast(coalesce(cast(table_name as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(column_name as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(metric as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(interval_length_sec as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(time_window_end as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) as \n    \n    STRING\n\n ) as id,\n    table_name,\n    column_name,\n    metric,\n    z_score_value,\n    modified_z_score_value,\n    last_value,\n    last_avg,\n    last_median,\n    last_stddev,\n    last_median_absolute_deviation,\n    last_mean_absolute_deviation,\n    last_iqr,\n    last_first_quartile,\n    last_third_quartile,\n    time_window_end,\n    interval_length_sec,\n    computed_on\n\nfrom z_score_without_id", "relation_name": "DB_DBT_DEMO_101.L3_GOLD.re_data_z_score"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-15T17:10:05.779727Z", "completed_at": "2024-05-15T17:10:05.823604Z"}, {"name": "execute", "started_at": "2024-05-15T17:10:05.825162Z", "completed_at": "2024-05-15T17:10:05.825172Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.048159122467041016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.re_data.re_data_anomalies", "compiled": true, "compiled_code": "\nselect\n    z.id,\n    z.table_name,\n    z.column_name,\n    z.metric,\n    z.z_score_value,\n    z.modified_z_score_value,\n    m.anomaly_detector,\n    z.last_value,\n    z.last_avg,\n    z.last_median,\n    z.last_stddev,\n    z.last_median_absolute_deviation,\n    z.last_mean_absolute_deviation,\n    z.last_iqr,\n    z.last_first_quartile - (cast( \n\n  json_extract_path_text(try_parse_json( m.anomaly_detector ), 'whisker_boundary_multiplier' )\n\n as \n    \n    FLOAT\n\n ) * z.last_iqr) lower_bound,\n    z.last_third_quartile + (cast( \n\n  json_extract_path_text(try_parse_json( m.anomaly_detector ), 'whisker_boundary_multiplier' )\n\n as \n    \n    FLOAT\n\n ) * z.last_iqr) upper_bound,\n    z.last_first_quartile,\n    z.last_third_quartile,\n    z.time_window_end,\n    z.interval_length_sec,\n    z.computed_on,\n    \n\n    case when z.column_name != '' then metric || '(' || column_name || ')'\n    else metric\n    end \n    || ' is ' ||\n    \n    \n    trim(to_char(\n    abs(\n        ( \n            cast(last_value - last_avg as \n    \n    FLOAT\n\n)\n        ) / \n        nullif(\n            cast( z.last_avg as \n    \n    FLOAT\n\n )\n        , 0) * 100.0\n    )\n, '9999999999999999990D00'))\n\n\n    || '% ' ||\n    \n    case when z.last_value > z.last_avg then 'greater than' \n    when z.last_value = z.last_avg then 'equal to'\n    else 'less than' end\n\n    || ' average.'\n as message,\n    \n    case \n        when z.metric = 'freshness' \n            then cast(\n    \n    trim(to_char(\n    cast(z.last_value as \n    \n    FLOAT\n\n) / 3600\n, '9999999999999999990D00'))\n\n as \n    \n    STRING\n\n) || ' hours'\n        when \n    \n    regexp_like(Z.METRIC, 'percent')\n\n \n            then cast(\n    \n    trim(to_char(z.last_value, '9999999999999999990D00'))\n\n as \n    \n    STRING\n\n) || '%'\n        when \n    \n    regexp_like(Z.METRIC, 'count')\n\n \n            then cast(z.last_value as \n    \n    STRING\n\n)\n        else cast(\n    \n    trim(to_char(z.last_value, '9999999999999999990D00'))\n\n as \n    \n    STRING\n\n)\n    end\n\n as last_value_text\nfrom\n    DB_DBT_DEMO_101.L3_GOLD.re_data_z_score z \nleft join DB_DBT_DEMO_101.L3_GOLD.re_data_selected m \non split_part(\n\n    regexp_replace( table_name, '(\")|(`)', ''), '.', 1) = m.database\nand split_part(\n\n    regexp_replace( table_name, '(\")|(`)', ''), '.', 2) = m.schema\nand split_part(\n\n    regexp_replace( table_name, '(\")|(`)', ''), '.', 3) = m.name\nwhere\n    case when (lower(coalesce(\n\n  json_extract_path_text(try_parse_json( m.anomaly_detector ), 'direction' )\n\n, 'both')) = 'up' and z.last_value > z.last_avg)\n        or (lower(coalesce(\n\n  json_extract_path_text(try_parse_json( m.anomaly_detector ), 'direction' )\n\n, 'both')) = 'down' and z.last_value < z.last_avg)\n        or (lower(coalesce(\n\n  json_extract_path_text(try_parse_json( m.anomaly_detector ), 'direction' )\n\n, 'both')) != 'up' and lower(coalesce(\n\n  json_extract_path_text(try_parse_json( m.anomaly_detector ), 'direction' )\n\n, 'both')) != 'down')\n        then\n            case \n                when \n\n  json_extract_path_text(try_parse_json( m.anomaly_detector ), 'name' )\n\n = 'z_score' \n                    then abs(z_score_value) > cast(\n\n  json_extract_path_text(try_parse_json( m.anomaly_detector ), 'threshold' )\n\n as \n    \n    FLOAT\n\n)\n                when \n\n  json_extract_path_text(try_parse_json( m.anomaly_detector ), 'name' )\n\n = 'modified_z_score' \n                    then abs(modified_z_score_value) > cast( \n\n  json_extract_path_text(try_parse_json( m.anomaly_detector ), 'threshold' )\n\n as \n    \n    FLOAT\n\n )\n                when \n\n  json_extract_path_text(try_parse_json( m.anomaly_detector ), 'name' )\n\n = 'boxplot' \n                    then (\n                        z.last_value < z.last_first_quartile - (cast( \n\n  json_extract_path_text(try_parse_json( m.anomaly_detector ), 'whisker_boundary_multiplier' )\n\n as \n    \n    FLOAT\n\n ) * z.last_iqr)\n                        or \n                        z.last_value > z.last_third_quartile + (cast( \n\n  json_extract_path_text(try_parse_json( m.anomaly_detector ), 'whisker_boundary_multiplier' )\n\n as \n    \n    FLOAT\n\n ) * z.last_iqr)\n                    )\n                else false\n            end\n        else false\n    end", "relation_name": "DB_DBT_DEMO_101.L3_GOLD.re_data_anomalies"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-15T17:10:05.829974Z", "completed_at": "2024-05-15T17:10:05.840681Z"}, {"name": "execute", "started_at": "2024-05-15T17:10:05.842230Z", "completed_at": "2024-05-15T17:10:05.842238Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.014901876449584961, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.re_data.re_data_alerts", "compiled": true, "compiled_code": "select\n    'anomaly' as type,\n    \n\n    regexp_replace( table_name, '(\")|(`)', '') as model,\n    message,\n    last_value_text as value,\n    time_window_end\nfrom\n    DB_DBT_DEMO_101.L3_GOLD.re_data_anomalies\nunion all\n\nselect\n    'schema_change' as type,\n    \n\n    regexp_replace( table_name, '(\")|(`)', '') as model,\n    \n    case \n        when operation = 'column_added'\n            then 'column ' || column_name || ' of type ' || data_type || ' was added.'\n        when operation = 'column_removed'\n            then 'column ' || prev_column_name || ' of type ' || prev_data_type || ' was removed.'\n        when operation = 'type_change'\n            then column_name || ' column data type was changed from ' || prev_data_type || ' to ' || data_type || '.'\n        else ''\n    end\n as message,\n    '' as value,\n    detected_time as time_window_end\nfrom DB_DBT_DEMO_101.L3_GOLD.re_data_schema_changes\n\nunion all\n\nselect\n    'test' as type,\n    table_name as model,\n    \n    case \n        when column_name is null\n            then 'Test ' || test_name || ' failed.'\n        else\n            'Test ' || test_name || ' failed for column ' || column_name || '.'\n    end\n,\n    status as value,\n    run_at as time_window_end\n\nfrom DB_DBT_DEMO_101.L3_GOLD.re_data_test_history\nwhere status = 'Fail' or status = 'Error'", "relation_name": "DB_DBT_DEMO_101.L3_GOLD.re_data_alerts"}], "elapsed_time": 5.736846685409546, "args": {"strict_mode": false, "indirect_selection": "eager", "populate_cache": true, "log_file_max_bytes": 10485760, "macro_debugging": false, "log_level_file": "debug", "write_json": true, "partial_parse_file_diff": true, "warn_error_options": {"include": [], "exclude": []}, "which": "generate", "compile": true, "vars": {}, "static_parser": true, "exclude": [], "cache_selected_only": false, "show_resource_report": false, "empty_catalog": false, "log_path": "/home/runner/work/sp_dbt_poc/sp_dbt_poc/sp_dbt_poc/logs", "quiet": false, "printer_width": 80, "project_dir": "/home/runner/work/sp_dbt_poc/sp_dbt_poc/sp_dbt_poc", "favor_state": false, "use_colors_file": true, "use_colors": true, "send_anonymous_usage_stats": true, "log_format_file": "debug", "log_level": "info", "partial_parse": true, "defer": false, "introspect": true, "enable_legacy_logger": false, "log_format": "default", "invocation_command": "dbt docs generate", "profiles_dir": "./", "print": true, "select": [], "version_check": true, "static": false}}